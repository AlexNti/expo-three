{"version":3,"file":"readAsStringAsync.js","sourceRoot":"","sources":["../../src/loaders/readAsStringAsync.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAIrD,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,+BAA+B,CAC3D,QAAgB;IAEhB,IAAI,MAAM,CAAC,wBAAwB,EAAE;QACnC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3B;IACD,IAAI;QACF,OAAO,MAAM,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAAC,OAAO,EAAE,OAAO,EAAE,EAAE;QACpB,MAAM,IAAI,KAAK,CAAC,2CAA2C,QAAQ,KAAK,OAAO,EAAE,CAAC,CAAC;KACpF;YAAS;QACR,IAAI,MAAM,CAAC,wBAAwB,EAAE;YACnC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9B;KACF;AACH,CAAC","sourcesContent":["import { readAsStringAsync } from 'expo-file-system';\n\ndeclare var global: any;\n\nexport default async function readFromFileSystemAsStringAsync(\n  localUri: string\n): Promise<string | null> {\n  if (global.__expo_three_log_loading) {\n    console.time('loadAsset');\n  }\n  try {\n    return await readAsStringAsync(localUri);\n  } catch ({ message }) {\n    throw new Error(`ExpoTHREE: FileSystem.readAsStringAsync(${localUri}) ${message}`);\n  } finally {\n    if (global.__expo_three_log_loading) {\n      console.timeEnd('loadAsset');\n    }\n  }\n}\n"]}